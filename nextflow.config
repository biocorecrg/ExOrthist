env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
}

manifest {
    mainScript = 'main.nf'
}

plugins {
  id 'nf-schema@2.0.0'
}

includeConfig "$baseDir/params.config"


process {
    containerOptions = { workflow.containerEngine == "docker" ? '-e USER=$USER -e HOME=$HOME -u $(id -u):$(id -g)': null}
    queue = 'long-sl7,short-sl7'
    cache = 'lenient'
    memory='4.5G'
    cpus='1'
    time='6h'
    scratch = false
    containerOptions = { workflow.containerEngine == "docker" ? '-u $(id -u):$(id -g)': null}

    withLabel: incr_time_cpus {
       errorStrategy = 'retry'
       memory = '5G'
       cpus = 2
       time = {6.h * task.attempt * task.attempt}
       maxRetries = 4
    }
    withLabel: big_mem {
        cpus = 1
        memory = '5G'
    }
    withLabel: big_mem_retry {
       errorStrategy = 'retry'
       memory = {5.GB * task.attempt}
       cpus = 1
       maxRetries = 4
    }

    withLabel: pandas {
     container = 'quay.io/biocontainers/pandas:1.5.2'
    }

    withLabel: aligners {
      cpus = 2
      memory = '5G'
      container = 'biocorecrg/exorthist_aligners:2.0.0'
    }

    withLabel: rscript {
     container = 'biocorecrg/exorthist_rscript:2.0.0'
    }


}

// process.container = 'biocorecrg/exon_intron_pipe:0.2'
process.container = 'perl:5.24-threaded-buster'
//singularity.enabled = true
singularity.cacheDir = "$baseDir/singularity"

// Modify accordig to cloud parameters
profiles {
    awsbatch {
      process.executor = 'awsbatch'
      process.queue = 'spot'
      workDir = 's3://data-nf/work'
      aws.region = 'eu-central-1'
      aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
      singularity.enabled = false
      docker.enabled = true
    }
}

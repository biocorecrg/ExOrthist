env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
}

manifest {
  name            = 'biocorecrg/ExOrthist'
  mainScript      = 'main.nf'
  author          = """Luca Cozzuto, Federica Mantica, Toni Hermoso Pulido"""
  homePage        = 'https://github.com/biocorecrg/ExOrthist'
  description     = """ExOrthist is a Nextflow-based pipeline to obtain groups of exon orthologous at all evolutionary timescales."""
  nextflowVersion = '!>=24.10.0'
  version         = '2.0.0'
  doi             = 'https://doi.org/10.1186/s13059-021-02441-9'
}

plugins {
  id 'nf-schema@2.2.0'
}

validation {
    help {
        enabled = true
        command = "nextflow run main.nf -profile docker"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
╔╦╗┬ ┬┌─┐  ╔═╗─┐ ┬╔═╗┬─┐┌┬┐┬ ┬┬┌─┐┌┬┐
 ║ ├─┤├┤   ║╣ ┌┴┬┘║ ║├┬┘ │ ├─┤│└─┐ │
 ╩ ┴ ┴└─┘  ╚═╝┴ └─╚═╝┴└─ ┴ ┴ ┴┴└─┘ ┴

See online README at https://github.com/biocorecrg/ExOrthist for further information.
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* Software dependencies
  https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
      summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
      }
    }
}

// Default params
params {
    // Generic options
    wf               = "main"

    // Schema validation default options
    validate_params  = true

    // Notification options
    hook_url         = null
    email            = null

    // Main pipeline options
    cluster          = "$projectDir/test/hg38_mm10_bosTau9.tab"
    genomes          = "$projectDir/test/GENOMES/*_gDNA-subsetted.fasta.gz"
    annotations      = "$projectDir/test/GTF/*_annot-subsetted.gtf.gz"
    alignmentnum     = 1000
    orthogroupnum    = 500
    evodists         = "$projectDir/test/evodists.txt"
    long_dist        = "2,0.10,0.40,0.15"
    medium_dist      = "2,0.30,0.60,0.20"
    short_dist       = "2,0.50,0.60,0.25"

    // Additional data
    extraexons       = null
    bonafide_pairs   = null
    orthopairs       = null
    prevaln          = null

    // Output folder
    output           = "$projectDir/output_test"

    // Plot pipeline specific options
    geneID           = "ENSG00000159055"
    output_plot      = "$projectDir/output_plot"
    relevant_exs     = "chr21:32274830-32274896"
    ordered_species  = "hg38,mm10,bosTau9"
    isoformID        = "ENSP00000290130"
    sub_orthologs    = null

    // Config options - from NF-Core
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    publish_dir_mode           = 'copy'
}

process {

    cache = 'lenient'
    memory = '5G'
    cpus = 1
    time='6h'
    scratch = false
    container = 'perl:5.24-threaded-buster'

    withLabel: aligners {
       errorStrategy = 'retry'
       cpus = 2
       time = {6.h * task.attempt * task.attempt}
       maxRetries = 4
       container = 'biocorecrg/exorthist_aligners:2.0.0'
    }

    withLabel: big_cpus {
        cpus = 2
    }

    withLabel: big_mem {
       errorStrategy = 'retry'
       memory = {5.GB * task.attempt}
       maxRetries = 4
    }

    withLabel: pandas {
     container = 'quay.io/biocontainers/pandas:1.5.2'
    }


    withLabel: rscript {
     container = 'biocorecrg/exorthist_rscript:2.0.1'
    }

}

// Modify accordig to cloud parameters
profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    // Default configuration for nf-test - Change accordingly
    test {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }

    // Original ExOrthist AWS Batch configuration
    // awsbatch {
    //  process.executor = 'awsbatch'
    //  process.queue = 'spot'
    //  workDir = 's3://data-nf/work'
    //  aws.region = 'eu-central-1'
    //  aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
    //  singularity.enabled = false
    //  docker.enabled = true
    // }
}


// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Overwrite default profiles - Change accordingly
singularity.cacheDir    = "$projectDir/singularity"
singularity.autoMounts  = false
apptainer.cacheDir      = "$projectDir/apptainer"
apptainer.autoMounts    = false

// Publish stuff - Eventually to move to https://www.nextflow.io/docs/latest/workflow.html#publishing-outputs
process {
  withName: 'PLOT_EXINT' {
      publishDir = [
        path: { "${params.output_plot}" },
        mode: params.publish_dir_mode
      ]
  }
  withName: 'SPLIT_CLUSTERS_BY_SPECIES_PAIRS' {
    publishDir = [
      path: { "${params.output}" },
      mode: params.publish_dir_mode,
      pattern: "gene_cluster_file.gz"
    ]
  }
  withLabel: 'publish' {
    publishDir = [
         path: { "${params.output}" },
         mode: params.publish_dir_mode
    ]
  }
  withLabel: 'publish_reclustering' {
    publishDir = [
         path: { "${params.output}/reclustering" },
         mode: params.publish_dir_mode
    ]
  }
}

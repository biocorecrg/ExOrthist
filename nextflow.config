env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
}

manifest {
  name            = 'biocorecrg/ExOrthist'
  mainScript      = 'main.nf'
  author          = """Luca Cozzuto, Federica Mantica, Toni Hermoso Pulido"""
  homePage        = 'https://github.com/biocorecrg/ExOrthist'
  description     = """ExOrthist is a Nextflow-based pipeline to obtain groups of exon orthologous at all evolutionary timescales."""
  nextflowVersion = '!>=24.04.2'
  version         = '2.0.0'
  doi             = 'https://doi.org/10.1186/s13059-021-02441-9'
}

plugins {
  id 'nf-schema@2.1.2'
}

validation {
    help {
        enabled = true
        command = "nextflow run main.nf -with-docker"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
╔╦╗┬ ┬┌─┐  ╔═╗─┐ ┬╔═╗┬─┐┌┬┐┬ ┬┬┌─┐┌┬┐
 ║ ├─┤├┤   ║╣ ┌┴┬┘║ ║├┬┘ │ ├─┤│└─┐ │
 ╩ ┴ ┴└─┘  ╚═╝┴ └─╚═╝┴└─ ┴ ┴ ┴┴└─┘ ┴

==============================================================================
INFORMATION ABOUT OPTIONS:
The long, medium, short distance cut-offs are in the format: "int_num;ex_seq;ex_len;prot_sim".
Only exon matches respecting all cut-offs are considered homologous.
- int_num (0,1,2): Number of surrounding intron positions required to be conserved.
- ex_seq (from 0 to 1): Minimum sequence similarity % between a
     pair of homologous exons and their corresponding upstream and
     downstream exons.
- ex_len (from 0 to 1): Maximum size difference between two homologous exons
     (as a fraction of either exon).
- prot_sim (from 0 to 1): Minimum sequence similarity over the entire pairwise alignment
     for a pair of protein isoforms to be considered for comparison.

See online README at https://github.com/biocorecrg/ExOrthist for further information about the options.
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* Software dependencies
    https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
      summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
      }
    }
}

includeConfig "$projectDir/params.config"


process {
    containerOptions = { workflow.containerEngine == "docker" ? '-e USER=$USER -e HOME=$HOME -u $(id -u):$(id -g)': null}
    queue = 'long-sl7,short-sl7'
    cache = 'lenient'
    memory='4.5G'
    cpus='1'
    time='6h'
    scratch = false
    containerOptions = { workflow.containerEngine == "docker" ? '-u $(id -u):$(id -g)': null}

    withLabel: incr_time_cpus {
       errorStrategy = 'retry'
       memory = '5G'
       cpus = 2
       time = {6.h * task.attempt * task.attempt}
       maxRetries = 4
       container = 'biocorecrg/exorthist_aligners:2.0.0'
    }
    withLabel: big_mem {
        cpus = 1
        memory = '5G'
    }
    withLabel: big_mem_retry {
       errorStrategy = 'retry'
       memory = {5.GB * task.attempt}
       cpus = 1
       maxRetries = 4
    }

    withLabel: pandas {
     container = 'quay.io/biocontainers/pandas:1.5.2'
    }

    withLabel: aligners {
      cpus = 2
      memory = '5G'
      container = 'biocorecrg/exorthist_aligners:2.0.0'
    }

    withLabel: rscript {
     container = 'biocorecrg/exorthist_rscript:2.0.0'
    }


}

process.container = 'perl:5.24-threaded-buster'
//singularity.enabled = true
singularity.cacheDir = "$projectDir/singularity"

// Modify accordig to cloud parameters
profiles {
    awsbatch {
      process.executor = 'awsbatch'
      process.queue = 'spot'
      workDir = 's3://data-nf/work'
      aws.region = 'eu-central-1'
      aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
      singularity.enabled = false
      docker.enabled = true
    }
}
